class Employee():
  new_id = 1
  def __init__(self):
    self.id = Employee.new_id
    Employee.new_id += 1

  def say_id(self):
    print("My id is {}.".format(self.id))

class User:
  def __init__(self, username, role="Customer"):
    self.username = username
    self.role = role

  def say_user_info(self):
    print("My username is {}".format(self.username))
    print("My role is {}".format(self.role))

class Admin(Employee, User): #Admin class inherits from Employee and User
  def __init__(self):
    super().__init__() #Invokes __init__
    User.__init__(self,self.id,"Admin") #Calls method from Class User

  def say_id(self):
    super().say_id()
    print("I am an admin.")

e1 = Employee()
e2 = Employee()
e3 = Admin()
e3.say_user_info()
# Executes - My Username is 3. My role is admin.

meeting = [Employee(),Admin(),Manager()] # Polymorphism
for x in meeting:
  x.say_id() #executes all messages from the classes
# Executes - My id is 1, My id is 2, My id is 3, I am Admin, I am in charge
